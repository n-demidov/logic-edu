package com.demidovn.fruitbounty.game.services.list

import spock.lang.Specification

class SubListPermutterTest extends Specification {

    SubListPermutter sublistPermutter = new SubListPermutter()

    def "should works correctly"() {
        expect:
        def actual = apply(list)
        new ArrayList<>(actual) == result

        where:
        list                      | result
        [[1, 2], [3, 4], [5, 6]]  | [[[1, 2], [3, 4], [5, 6]], [[3, 4], [1, 2], [5, 6]], [[5, 6], [1, 2], [3, 4]], [[1, 2], [5, 6], [3, 4]], [[3, 4], [5, 6], [1, 2]], [[5, 6], [3, 4], [1, 2]], [[1, 2], [3, 4], [6, 5]], [[3, 4], [1, 2], [6, 5]], [[6, 5], [1, 2], [3, 4]], [[1, 2], [6, 5], [3, 4]], [[3, 4], [6, 5], [1, 2]], [[6, 5], [3, 4], [1, 2]], [[1, 2], [4, 3], [5, 6]], [[4, 3], [1, 2], [5, 6]], [[5, 6], [1, 2], [4, 3]], [[1, 2], [5, 6], [4, 3]], [[4, 3], [5, 6], [1, 2]], [[5, 6], [4, 3], [1, 2]], [[1, 2], [4, 3], [6, 5]], [[4, 3], [1, 2], [6, 5]], [[6, 5], [1, 2], [4, 3]], [[1, 2], [6, 5], [4, 3]], [[4, 3], [6, 5], [1, 2]], [[6, 5], [4, 3], [1, 2]], [[2, 1], [3, 4], [5, 6]], [[3, 4], [2, 1], [5, 6]], [[5, 6], [2, 1], [3, 4]], [[2, 1], [5, 6], [3, 4]], [[3, 4], [5, 6], [2, 1]], [[5, 6], [3, 4], [2, 1]], [[2, 1], [3, 4], [6, 5]], [[3, 4], [2, 1], [6, 5]], [[6, 5], [2, 1], [3, 4]], [[2, 1], [6, 5], [3, 4]], [[3, 4], [6, 5], [2, 1]], [[6, 5], [3, 4], [2, 1]], [[2, 1], [4, 3], [5, 6]], [[4, 3], [2, 1], [5, 6]], [[5, 6], [2, 1], [4, 3]], [[2, 1], [5, 6], [4, 3]], [[4, 3], [5, 6], [2, 1]], [[5, 6], [4, 3], [2, 1]], [[2, 1], [4, 3], [6, 5]], [[4, 3], [2, 1], [6, 5]], [[6, 5], [2, 1], [4, 3]], [[2, 1], [6, 5], [4, 3]], [[4, 3], [6, 5], [2, 1]], [[6, 5], [4, 3], [2, 1]]]

        // With duplicates
        [[0], [0]]                | [[[0], [0]]]
        [[0], [0], [0]]           | [[[0], [0], [0]]]
        [[0, 0], [0, 0]]          | [[[0, 0], [0, 0]]]
        [[0, 0], [0, 0], [0, 0]]  | [[[0, 0], [0, 0], [0, 0]]]
        [[1, 0], [1, 0]]          | [[[1, 0], [1, 0]], [[1, 0], [0, 1]], [[0, 1], [1, 0]], [[0, 1], [0, 1]]]
    }

    def apply(List<List<Integer>> list) {
        return sublistPermutter.permuteAll(list)
    }

}
