План по генерации составных игр

Шаги:
// Сначала обкатать одиночную игру.
// На самом простом варианте.
// Сначала сделать шаг1. А потом уже расширять и сравнивать функционалы.


  
(на потом)
- как быть с энергией и таймингом в мультиплеере и одиночной?
  - как быть с кол-м свидетелей и будет ли конечность игры?
  - если нет проверки на найденность ответа, то значит ли это, что необходимо дать возможность бесконечно брать ломки?
Вар-ты соотношения с ответом:
- вар1: бесконечный опрос до победного; неизвестно когда нашелся ответ;
- вар2: бесконечный опрос до победного; как-то чекать - нашелся ли ответ; пытаться найти оптимальное кол-во энергии для закрытия квеста;
- вар3: сгенерировать гл/кв; жестко выдать только нужные зацепки;
- вар4: сгенерировать гл/кв; отдать ответы как зацепки; сгенерить ветки; как-то проконтроллировать, чтобы кол-во энергии совпало со всеми найденными зацепками;


== 1: без действий, единственная кнопка "взять новый квест":
Подробное описание:
- берем новые квесты пока не найдем ответ;

Минусы:
- нет активных действий; нет выбора;
- нет возможности игрокам разделиться по разным веткам;
- у импостера очень мало функционала;

Команда: все решают общие квесты;
Импостер: почти нет возможности им помешать;

== 2: доб. иллюзию выбора - опрос свидетелей:
Подробное описание:
- заменяем кнопку "Далее" на имена новых свидетелей; получается иллюзия выбора;
- при опросе нового свидетеля - функционал такой же как и по кнопке "Далее" - генерируется новый квест;

Подробный алгоритм:
- получаем стартовый скоуп свидетелей;
- при опросе свидетелей - получаем новых;
- можно заставить петлять:
  - при опросе свидетеля есть 50%, что он не даст новых; и тогда надо вернуться к неопрошенным ранее; но если же это последний свидетель - даем новых;
  - следим, чтобы надо было плутать, возвращаясь к зацепкам со старта;
- Л-свидетель: не дает ничего (ни ломку, ни свидетелей);
- И-свидетель: 50% дает новых; 50% - не дает новых; всегда дает ломку;

Команда: может разделиться по разным веткам;
Импостер: может пойти по ветке и соврать про инфу; может соврать про свидетеля;

Впоросы:
- найти способ давать возможность брать бесконечно свидетелей, добавляя их в список; либо сделать список гигантским (и скорее всего за 100 свидетелей должен найтись ответ); либо пусть тогда игрок проиграет (либо сам слишком слабый, либо 5% на поражение);

== 3: наименования зацепки:
- как быть с наименованием зацепки? Можно ли показать что кто-то может знать или не знать? И есть ли в этом смысл? В реальной жизни всё равно неизвестно же что кто-то может подсказать или нет?;

- вар1: оставить на будущее расширение функционала;
- вар2: в описании доб. инфо о том какие данные может дать свидетель (например, "Марта была знакома. Возможно видела что-то о норвежце или виски");
  - тогда будет не рандомная генерация, а по некоторым условиям?
  - не помешает ли это динамической генерации петель у веток? Или же сделать так, чтобы не влияло: выдача инфы из описания всегда имеет n%; и никак не связана с петлями (выдачей имен); а выдача новых имен (петли) - работает по своему алгоритму (z%; если осталась последняя зацепка, то 100% на выдачу новых имен);
  - если свид-ль дает нескл. данных?

== 4: свидетели дают какие-то вариации:
(оставить на будущее расширение функционала)

- продумать...;
- И-свидетель:
  - имена свидетелей: может дать имена новых; "-": может дать: имена старых, ничего не дать;
  - инфа: полезная ломка; ничего; бесполезная; нерешаемая ломка; повторяющаяся инфа;
- Л-свидетель:
  - имена свидетелей: ничего; имена старых; имена ложных;
  - инфа: ничего; бесполезная; нерешаемая ломка; ложная ломка;

- игроки могут сканировать свидетелей на И/Л в любой момент; но тратится энергия/время;

Импостер: может соврать, направив на ложного свидетеля (а тот уже далее будет направлять не туда);

== 5: любые свидетели могут лгать:
(оставить на будущее расширение функционала)

Подробное описание:
- их надо проверять отдельно на ложь/не ложь;
- проверка может давать не 100% результат, а только 80%;
- любые свидетели могут дать ссылки на ложных;
- ложные с большей вероятностью не будут делиться ссылками на истинных;

- если изначально даются Л-свидетели, то как мы их можем проверить?
  - введя в точно известный не решаемый м/кв;
  - потратив энергию персонажей (вероятность);
  - перки персонажей (вероятность);
  - события;
  - найдя противоречия между двумя ответами 2-х свидетелей;

- если Л-свидетели подкидывают компромат на хороших; а хорошие - также компромат на плохих? если вероятность нескл. смещена в сторону правды;
- если можно заявить о компромате свидетелю (из огромного списка); после чего он может дать полезную инфу;




// Как в жизни:
- опрашиваем ближний круг;
- постоянно собираем зацепки на новых свидетелей (знакомые, семья, коллеги, партнеры, с его клуба, хобби и пр.);
- опрашиваем всех;
- выявляются противоречия;
- значит кто-то из свидетелей лжет?;
- вар1: рассматриваются разные линии. Смотрится, чем можно объяснить нестыковки: это ложь или неудачное стечение обстоятельств для правды?
- вар2: чекаем свидетеля на истинность. Тратим действие.


== На будущий функционал:
- 50% на генерацию стартовой головоломки (одна из вариации м/кв);
- иногда писать "хорошо разглядела" - типо более простой м/кв; "смутно помнит" - более сложный кв;
- не даст ли подстановка ответов в м/кв дисбаланс? М.б. надо будет ограничить ее за счет разкотегаризации данных, по кот. создавать м/кв? Или с разных таблиц между собой выдавать?;
- события/случаи, где говорится, что такой-то свидетель лжет или говорит правду или пр.;


// решить гл/кв можно за счёт:
  // решения простых м/кв (но до них надо докопаться - потеря очков);
  // решения сложных м/кв;

  // подстановки ответов в м/кв;

  // выведения данных табличным методом;
  // выведения данных транзитивным методом;

// "может дать полезную инфу о шведе"; "не может дать полезной инфы";
